stages:
  - test
  - build
  - deploy

variables:
  DJANGO_SETTINGS_MODULE: UserCenter.settings
  DJANGO_ENV: testing
  DB_NAME: test_usercenter
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_HOST: postgres
  DB_PORT: 5432
  REDIS_URL: redis://redis:6379/0

test:
  stage: test
  image: python:3.10-slim
  services:
    - name: postgres:14-alpine
      alias: postgres
      variables:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: test_usercenter
    - name: redis:7-alpine
      alias: redis
  before_script:
    - apt-get update && apt-get install -y gcc libpq-dev
    - pip install -r requirements/dev.txt
  script:
    - python manage.py test user.tests
  only:
    - main
    - merge_requests

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose build
    - docker-compose push
  only:
    - main
  dependencies:
    - test

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SERVER_USER@$SERVER_HOST "cd $PROJECT_PATH && docker-compose pull && docker-compose up -d"
  only:
    - main
  dependencies:
    - build 